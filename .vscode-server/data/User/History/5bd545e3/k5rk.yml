---
- hosts: localhost
  become: yes
  gather_facts: no
  vars_files:
    - /home/ndao/mysql_setup/vars/mysql_vars.yml
  vars_prompt:
    name: mysql_root_password
    prompt: "Mot de passe Root"
    private: yes
  tasks:
    - name: Check if database exists
      mysql_db:
        name: "{{ item.name }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: root
        login_password: "{{ mysql_root_password }}"
      with_items: "{{ databases }}"
      register: db_check

    - name: Display message if database already exists
      debug:
        msg: "Database {{ item.item.name }} already exists."
      when: item.changed == false
      loop: "{{ db_check.results }}"

    - name: Create database if it does not exist
      mysql_db:
        name: "{{ item.name }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: item.changed == true
      loop: "{{ db_check.results }}"

    - name: Check if user already exists
      mysql_user:
        name: "{{ item.user }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_user: root
        login_password: "{{ mysql_root_password }}"
      with_items: "{{ databases }}"
      register: user_check

    - name: Display message if user already exists
      debug:
        msg: "User {{ item.item.user }} already exists."
      when: item.changed == false
      loop: "{{ user_check.results }}"

    - name: Create user if it does not exist
      mysql_user:
        name: "{{ item.user }}"
        password: "{{ db_user_password }}"
        priv: "{{ item.name }}.*:ALL"
        state: present
        update_password: on_create
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_password: "{{ mysql_root_password }}"
        login_user: root
      when: item.changed == true
      loop: "{{ user_check.results }}"
