---
- hosts: localhost
  become: yes
  vars_files:
    - /home/ndao/mysql_setup/vars/mysql_vars.yml
  vars_prompt:
    name: mysql_root_password
    prompt: "Mot de passe Root"
    private: yes
  tasks:
    - name: Create multiple databases with individual users
      mysql_db:
        name: "{{ item.name }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_password: "{{ mysql_root_password }}"
        login_user: root
      loop: "{{ databases }}"
      loop_control:
        loop_var: item

    - name: Check if user exists before creation
      command: mysql -e "SELECT user FROM mysql.user WHERE user='{{ item.user }}'"
      register: user_check
      ignore_errors: yes
      loop: "{{ databases }}"
      loop_control:
        loop_var: item
    
    - name: Display message if user already exists
      debug:
       msg: "User '{{ item.user }}' already exists."
      when: user_check.rc == 0
      loop: "{{ databases }}"
      loop_control:
        loop_var: item    

    - name: Create a single user for the designated database with auto-generated passwords
      command: mysql -e "CREATE USER IF NOT EXISTS '{{ item.user }}'@'localhost' IDENTIFIED BY '{{ item.password }}';"
      mysql_user:
        priv: "{{ item.name }}:ALL"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_password: "{{ mysql_root_password }}"
        login_user: root 
      loop: "{{ databases }}"
      loop_control:
        loop_var: item   

    - name: Show common user password   
      debug:
        msg: "Mot de passe: {{ item.password }}"
      loop: "{{ databases }}"
      loop_control:
        loop_var: item

    - name: Create a single user for all databases with auto-generated passwords
      mysql_user:
        name: "{{ common_user }}"
        password: "{{ common_password }}"
        priv: "{{ item.name }}:ALL"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_password: "{{ mysql_root_password }}"
        login_user: root
      loop: "{{ databases }}"
      loop_control:
        loop_var: item

    - name: Show common user password   
      debug:
        msg: "Mot de passe: {{ common_password }}"
