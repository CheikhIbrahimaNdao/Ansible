# Create databases and users

- name: Vérifier si le nom suit la nomenclature MYS....{{ dba_env_db | upper}}
  assert:
    that:
      - "dba_name_db | regex_search('^MYS.*{{ dba_env_db | upper}}$')"
    fail_msg: "Le nom '{{ dba_name_db }}' ne suit pas la nomenclature 'MYS....{{ dba_env_db | upper }}'"
    success_msg: "Le nom '{{ dba_name_db }}' suit la nomenclature 'MYS....{{ dba_env_db | upper }}'"
  register: nomenclature
  ignore_errors: yes

- name: Exécuter les tâches suivantes seulement si la vérification a réussi
  block:
    - name: Create a database
      mysql_db:
        name: "{{ dba_name_db }}"
        state: present
        login_password: "{{ db_user_password }}"
        login_user: "{{ db_user }}"
        login_host: "{{ env.db_ip }}"
        login_port: "{{ env.db_port }}"
      when: db_check.stdout == ""

    - name: Generate a random password for the MySQL user
      set_fact:
        dba_username_db_password: "{{ lookup('community.general.random_string', length=(range(15, 21) | random), min_lower=1, min_upper=1, min_numeric=1, special=false) }}"
      when: user_check.stdout == ""

    - name: Create a user for the database with auto-generated password
      mysql_user:
        name: "{{ dba_username_db }}"
        host:  "{{ env.db_host }}"
        password: "{{ dba_username_db_password }}"
        priv: "{{ dba_name_db }}.*:ALL"
        state: present
        update_password: on_create
        login_password: "{{ db_user_password }}"
        login_user: "{{ db_user }}"
        login_host: "{{ env.db_ip }}"
        login_port: "{{ env.db_port }}"
      when: user_check.stdout == ""

    - name: Grant privileges to MySQL user if user exists
      shell: |
        mysql -u{{ db_user }} -h{{ env.db_ip }} -P{{ env.db_port }} -p{{ db_user_password }} -e \
        'GRANT USAGE ON {{ dba_name_db }}.* TO "{{ dba_username_db }}"@"{{ env.db_host }}"; \
        GRANT ALL PRIVILEGES ON {{ dba_name_db }}.* TO "{{ dba_username_db }}"@"{{ env.db_host }}";'
      when: user_check.stdout != ""
      ignore_errors: yes 

    - name: Display username and password
      debug:
        msg: "User '{{ dba_username_db }}' created with password '{{ dba_username_db_password }}'."
      when: user_check.stdout == ""
  when: nomenclature is failed or nomenclature.failed == true

